<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.guoguo.mapper.ShowCategoryMapper">
  <resultMap id="BaseResultMap" type="com.guoguo.bean.ShowCategory">
    <id column="category_id" jdbcType="INTEGER" property="categoryId" />
    <result column="category_parent_id" jdbcType="INTEGER" property="categoryParentId" />
    <result column="category_level" jdbcType="INTEGER" property="categoryLevel" />
    <result column="category_name" jdbcType="VARCHAR" property="categoryName" />
    <result column="use_state" jdbcType="INTEGER" property="useState" />
    <result column="img_url" jdbcType="VARCHAR" property="imgUrl" />
    <result column="display_order" jdbcType="INTEGER" property="displayOrder" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="create_operator" jdbcType="VARCHAR" property="createOperator" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="update_operator" jdbcType="VARCHAR" property="updateOperator" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    category_id, category_parent_id, category_level, category_name, use_state, img_url, 
    display_order, create_date, create_operator, update_date, update_operator
  </sql>
  <select id="selectByExample" parameterType="com.guoguo.bean.ShowCategoryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from show_category
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from show_category
    where category_id = #{categoryId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from show_category
    where category_id = #{categoryId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.guoguo.bean.ShowCategory">
    insert into show_category (category_id, category_parent_id, category_level, 
      category_name, use_state, img_url, 
      display_order, create_date, create_operator, 
      update_date, update_operator)
    values (#{categoryId,jdbcType=INTEGER}, #{categoryParentId,jdbcType=INTEGER}, #{categoryLevel,jdbcType=INTEGER}, 
      #{categoryName,jdbcType=VARCHAR}, #{useState,jdbcType=INTEGER}, #{imgUrl,jdbcType=VARCHAR}, 
      #{displayOrder,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP}, #{createOperator,jdbcType=VARCHAR}, 
      #{updateDate,jdbcType=TIMESTAMP}, #{updateOperator,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.guoguo.bean.ShowCategory">
    insert into show_category
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="categoryId != null">
        category_id,
      </if>
      <if test="categoryParentId != null">
        category_parent_id,
      </if>
      <if test="categoryLevel != null">
        category_level,
      </if>
      <if test="categoryName != null">
        category_name,
      </if>
      <if test="useState != null">
        use_state,
      </if>
      <if test="imgUrl != null">
        img_url,
      </if>
      <if test="displayOrder != null">
        display_order,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="createOperator != null">
        create_operator,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
      <if test="updateOperator != null">
        update_operator,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="categoryId != null">
        #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="categoryParentId != null">
        #{categoryParentId,jdbcType=INTEGER},
      </if>
      <if test="categoryLevel != null">
        #{categoryLevel,jdbcType=INTEGER},
      </if>
      <if test="categoryName != null">
        #{categoryName,jdbcType=VARCHAR},
      </if>
      <if test="useState != null">
        #{useState,jdbcType=INTEGER},
      </if>
      <if test="imgUrl != null">
        #{imgUrl,jdbcType=VARCHAR},
      </if>
      <if test="displayOrder != null">
        #{displayOrder,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createOperator != null">
        #{createOperator,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateOperator != null">
        #{updateOperator,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.guoguo.bean.ShowCategoryExample" resultType="java.lang.Long">
    select count(*) from show_category
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.guoguo.bean.ShowCategory">
    update show_category
    <set>
      <if test="categoryParentId != null">
        category_parent_id = #{categoryParentId,jdbcType=INTEGER},
      </if>
      <if test="categoryLevel != null">
        category_level = #{categoryLevel,jdbcType=INTEGER},
      </if>
      <if test="categoryName != null">
        category_name = #{categoryName,jdbcType=VARCHAR},
      </if>
      <if test="useState != null">
        use_state = #{useState,jdbcType=INTEGER},
      </if>
      <if test="imgUrl != null">
        img_url = #{imgUrl,jdbcType=VARCHAR},
      </if>
      <if test="displayOrder != null">
        display_order = #{displayOrder,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createOperator != null">
        create_operator = #{createOperator,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateOperator != null">
        update_operator = #{updateOperator,jdbcType=VARCHAR},
      </if>
    </set>
    where category_id = #{categoryId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.guoguo.bean.ShowCategory">
    update show_category
    set category_parent_id = #{categoryParentId,jdbcType=INTEGER},
      category_level = #{categoryLevel,jdbcType=INTEGER},
      category_name = #{categoryName,jdbcType=VARCHAR},
      use_state = #{useState,jdbcType=INTEGER},
      img_url = #{imgUrl,jdbcType=VARCHAR},
      display_order = #{displayOrder,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      create_operator = #{createOperator,jdbcType=VARCHAR},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      update_operator = #{updateOperator,jdbcType=VARCHAR}
    where category_id = #{categoryId,jdbcType=INTEGER}
  </update>
</mapper>