<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd">

       <context:annotation-config/>
       <context:property-placeholder location="classpath:redis.properties" ignore-unresolvable="true"/>

       <!-- jedis 配置 -->
       <bean id= "jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
              <property name="maxTotal" value="${redis.pool.maxTotal}" />
              <property  name="maxIdle" value="${redis.pool.maxIdle}" />
              <property name="maxWaitMillis"  value="${redis.pool.maxWaitMillis}" />
              <property name="testOnBorrow" value="${redis.pool.testOnBorrow}" />
       </bean>

       <!-- redis服务器中心 -->
       <bean id="jedisConnectionFactory"  class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" >
              <property name="poolConfig" ref="jedisPoolConfig" />
              <property name="port" value="${redis.port}" />
              <property name="hostName" value="${redis.host}" />
              <!-- <property name="password" value="${redis.password}" /> -->
              <property name="timeout" value="${redis.timeout}" ></property>
              <property name="usePool" value="true" />
       </bean >
       <bean id = "redisTemplate" class="org.springframework.data.redis.core.RedisTemplate" p:connectionFactory-ref="jedisConnectionFactory">
              <property name="connectionFactory" ref="jedisConnectionFactory" />
              <property name="keySerializer">
                     <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
              </property>
              <property name="valueSerializer">
                     <bean class="org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer" />
              </property>
       </bean>

       <!--缓存时长根据自己的业务需求来设定-->
       <bean id="cacheManager" class="org.springframework.data.redis.cache.RedisCacheManager">
              <constructor-arg>
                     <bean class="org.springframework.data.redis.core.RedisTemplate"
                           p:connectionFactory-ref="jedisConnectionFactory">
                            <property name="keySerializer">
                                   <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
                            </property>
                            <property name="hashKeySerializer">
                                   <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
                            </property>
                            <property name="defaultSerializer">
                                   <bean class="org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer" />
                            </property>
                     </bean>
              </constructor-arg>
              <property name="defaultExpiration" value="300"/>
       </bean>
       <cache:annotation-driven cache-manager="cacheManager"/>
</beans>